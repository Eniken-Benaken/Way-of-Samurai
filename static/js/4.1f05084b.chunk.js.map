{"version":3,"sources":["components/common/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Forms/MessageForm.module.css","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Message/Message.tsx","components/Forms/MessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToProps","state","is_auth","getIsAuth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialog","id","dialog_avatar","dialog_name","path","className","s","dialog","activeClassName","active","src","alt","Message","message_id","author_id","message","own","MessageForm","sendMessage","validationSchema","Yup","new_message","max","initialValues","onSubmit","values","resetForm","error","console","send_message_form","send_message_input","component","name","type","send_message_button","Dialogs","dialogs","messages","setCurrentRoute","dialogsArray","messagesArray","dialogs_wrapper","dialog_items_wrapper","dialog_items","map","d","m","compose","getDialogs"],"mappings":"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","file":"static/js/4.1f05084b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getIsAuth } from '../../redux/selectors';\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tis_auth: getIsAuth(state),\r\n})\r\nconst withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif(!this.props.is_auth) return <Redirect to=\"/login\" />\r\n\t\t\treturn(\r\n\t\t\t\t<Component {...this.props} />\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__2zTOg\",\"dialog_items_wrapper\":\"Dialogs_dialog_items_wrapper__1kMjr\",\"dialog_items\":\"Dialogs_dialog_items__3Rvu-\",\"messages\":\"Dialogs_messages__2iZpL\",\"new_message_wrapper\":\"Dialogs_new_message_wrapper__2Aspz\",\"new_message\":\"Dialogs_new_message__2IxTl\",\"new_message_buttons\":\"Dialogs_new_message_buttons__3TgVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__Hc26M\",\"active\":\"Dialog_active__96BS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__24nBZ\",\"own\":\"Message_own__19eSK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"send_message_form\":\"MessageForm_send_message_form__2d4eW\",\"send_message_input\":\"MessageForm_send_message_input__2TLZE\",\"send_message_button\":\"MessageForm_send_message_button__NyaTO\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Dialog.module.css';\r\n\r\ntype PropsType = {\r\n\tid: number | string,\r\n\tdialog_avatar: string,\r\n\tdialog_name: string\r\n}\r\n\r\nconst Dialog: React.FC<PropsType> = ({id,dialog_avatar,dialog_name}) => {\r\n\tconst path = `/dialogs/${id}`;\r\n\r\n\treturn (\r\n\t\t<div className={s.dialog}>\r\n\t\t\t<NavLink to={path} activeClassName={s.active}>\r\n\t\t\t\t<img src={dialog_avatar} alt='dialog_avatar'></img>\r\n\t\t\t\t<div>{dialog_name}</div>\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Dialog;\r\n","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\ntype PropsType = {\r\n\tmessage_id: number,\r\n\tmessage: string,\r\n\tauthor_id: number | string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = ({message_id,author_id,message}) => {\r\n\treturn(\r\n\t\t<div id={`${message_id}`} className={`${s.message} ${author_id === 0&&s.own}`}>{message}</div>\r\n\t);\r\n}\r\n\r\nexport default Message;\r\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport s from './MessageForm.module.css';\r\nimport * as Yup from 'yup';\r\n\r\ntype PropsType = {\r\n\tsendMessage: (new_message: string) => void,\r\n}\r\n\r\nconst MessageForm: React.FC<PropsType> = ({sendMessage}) => {\r\n\tconst initialValues = {\r\n\t\tnew_message: '',\r\n\t}\r\n\r\n\tconst onSubmit = (values: typeof initialValues,{resetForm}:any) => {\r\n\t\ttry {\r\n\t\t\tsendMessage(values.new_message);\r\n\t\t\tresetForm({});\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst validationSchema = Yup.object({\r\n\t\tnew_message: Yup.string().max(200, \"Your message is too long\")\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t>\r\n\t\t\t<Form className={s.send_message_form}>\r\n\t\t\t\t<div className={s.send_message_input}>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent=\"textarea\"\r\n\t\t\t\t\t\tname=\"new_message\"\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ErrorMessage name='new_message' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"submit\" className={s.send_message_button}>Send message</button>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n}\r\n\r\nexport default MessageForm;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport MessageForm from '../Forms/MessageForm';\r\nimport { dialogs_type } from '../../redux/reducers/dialogs_reducer';\r\n\r\n\r\ntype PropsType = {\r\n\tdialogs: dialogs_type,\r\n\tsendMessage: (new_message: string) => void,\r\n\tsetCurrentRoute: (current_route: string) => void\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = ({dialogs:{dialogs,messages},sendMessage,setCurrentRoute}) => {\r\n\tsetCurrentRoute(\"/dialogs\");\r\n\tlet dialogsArray = [...dialogs];\r\n\tlet messagesArray = [...messages];\r\n\tconst sendNewMessage = (new_message: string) => {\r\n\t\t\tsendMessage(new_message);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs_wrapper}>\r\n\t\t\t<div className={s.dialog_items_wrapper}>\r\n\t\t\t\t<div className={s.dialog_items}>\r\n\t\t\t\t\t{dialogsArray.map(d => <Dialog key={d.id} id={d.id} dialog_name={d.dialog_name} dialog_avatar={d.dialog_avatar} />)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t{messagesArray.map(m => <Message key={m.message_id} message_id={m.message_id} message={m.message} author_id={m.author_id} />)}\r\n\t\t\t\t<MessageForm sendMessage={sendNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Dialogs;\r\n","import { dialogs_type, sendMessage } from '../../redux/reducers/dialogs_reducer';\r\nimport { setCurrentRoute } from '../../redux/reducers/app_reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../common/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getDialogs } from '../../redux/selectors';\r\nimport { AppStateType } from '../../redux/redux_store';\r\n\r\ntype mapStateToPropsType = {\r\n\tdialogs: dialogs_type\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n\tsendMessage: (new_message: string) => void,\r\n\tsetCurrentRoute: (current_route: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n\treturn ({\r\n\t\tdialogs: getDialogs(state)\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n\tconnect<mapStateToPropsType,mapDispatchToPropsType,{},AppStateType>(mapStateToProps,{\r\n\t\tsendMessage,\r\n\t\tsetCurrentRoute\r\n\t}),\r\n\twithAuthRedirect\r\n)(Dialogs) as React.FC;\r\n"],"sourceRoot":""}