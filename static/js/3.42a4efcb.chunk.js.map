{"version":3,"sources":["components/common/withAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/Posts/MyPosts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Forms/PostForm.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/MyPosts.jsx","components/Profile/Posts/MyPostsContainer.jsx","components/Profile/ProfileInfo/Status.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","is_auth","getIsAuth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","PostForm","addPost","validationSchema","Yup","new_post","max","initialValues","onSubmit","values","type","name","Post","className","s","item","id","src","alt","post_content_wrapper","author","href","author_url","post_content","action_buttons","likes","likes_count","add_comment","MyPosts","posts","map","p","MyPostsContainer","profile","dispatch","action","addPostActionCreator","Status","statusText","ownProfile","updateStatus","useState","status","setStatus","editMode","setEditMode","useEffect","toggleEditMode","data-testid","autoFocus","onChange","e","target","value","onClick","onDoubleClick","ProfileInfo","current_visited_user","isFetching","user_id","Preloader","userId","is_looking","lookingForAJob","looking_for_job","contacts","contact","push","avatar","photos","large","avatarPlaceholder","profileInfo_wrapper","banner","person_info","avatar_block","user_name","fullName","description_block","description_header","description_content","Profile","setCurrentRoute","profile_wrapper","ProfileContainer","match","params","getUserData","compose","getCurrentVisitedUserId","is_fetching","getIsFetchingProfileData","getCurrentVisitedUserstatus","getCurrentUserId","withRouter"],"mappings":"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","file":"static/js/3.42a4efcb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getIsAuth } from '../../redux/selectors';\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tis_auth: getIsAuth(state),\r\n})\r\nconst withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif(!this.props.is_auth) return <Redirect to=\"/login\" />\r\n\t\t\treturn(\r\n\t\t\t\t<Component {...this.props} />\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_wrapper\":\"Profile_profile_wrapper__1YLEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3ng4M\",\"new_post\":\"MyPosts_new_post__bwkT4\",\"new_post_content\":\"MyPosts_new_post_content__2WQf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1I4R3\",\"post_content_wrapper\":\"Post_post_content_wrapper__3Z6oL\",\"author\":\"Post_author__1dN6P\",\"post_content\":\"Post_post_content__1rFbh\",\"action_buttons\":\"Post_action_buttons__1kYno\",\"likes\":\"Post_likes__34yDk\",\"add_comment\":\"Post_add_comment__nNteY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo_wrapper\":\"ProfileInfo_profileInfo_wrapper__PT8YA\",\"banner\":\"ProfileInfo_banner__2jObx\",\"person_info\":\"ProfileInfo_person_info__34u4h\",\"avatar_block\":\"ProfileInfo_avatar_block__1nFGo\",\"user_name\":\"ProfileInfo_user_name__38mv_\",\"looking_for_job\":\"ProfileInfo_looking_for_job__2IveP\",\"description_block\":\"ProfileInfo_description_block__1TkpC\",\"description_content\":\"ProfileInfo_description_content__2lwQJ\"};","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nconst PostForm = ({addPost}) => {\r\n\tconst initialValues = {\r\n\t\tnew_post: '',\r\n\t}\r\n\r\n\tconst onSubmit = values => {\r\n\t\taddPost(values.new_post);\r\n\t}\r\n\r\n\tconst validationSchema = Yup.object({\r\n\t\tnew_post: Yup.string().max(200, \"Your post text is too long\")\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t>\r\n\t\t\t<Form>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\ttype=\"textarea\"\r\n\t\t\t\t\t\tname=\"new_post\"\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ErrorMessage name='new_post' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"submit\">Add Post</button>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n}\r\n\r\nexport default PostForm;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn(\r\n\t\t<div className={s.item} id={props.id}>\r\n\t\t\t<img src=\"https://i.guim.co.uk/img/media/d31ebd49b32a5aa609a584ababb1e03bc70b4942/573_213_2929_1758/master/2929.jpg?width=445&quality=45&auto=format&fit=max&dpr=2&s=a54fc963e39dd6645fce012663ed13c1\" alt=\"avatar\"/>\r\n\t\t\t<div className={s.post_content_wrapper}>\r\n\t\t\t\t<div className={s.author}>\r\n\t\t\t\t\t<a href={props.author_url}>{props.author}</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.post_content}>{props.post_content}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.action_buttons}>\r\n\t\t\t\t<div className={s.likes}>{props.likes_count}{\"\\u2764\"} like</div>\t\t\t\r\n\t\t\t\t<div className={s.add_comment}>add comment</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t/* <div className={s.item}>{props.post_contents}</div> */\r\n\t);\r\n}\r\n\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport PostForm from '../../Forms/PostForm';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n\tconst posts = props.posts;\r\n\r\n\tconst addPost = (new_post) => {\r\n\t\t\tprops.addPost(new_post);\r\n\t};\r\n\r\n\treturn(\r\n\t\t<div className={s.posts}>\r\n\t\t\t<div className={s.new_post}>\r\n\t\t\t\t{/* <div><textarea ref={newPost} className={s.new_post_content} placeholder=\"What is on your mind?\" onChange={handleChange} value={newPostState}></textarea></div>\r\n\t\t\t\t<button onClick={addNewPost} >Add New</button>\r\n\t\t\t\t<button>Upload Image</button> */}\r\n\t\t\t\t<PostForm addPost={addPost} /> \r\n\t\t\t</div>\r\n\t\t\t{posts.map(p => <Post \r\n\t\t\t\tkey={p.id}\r\n\t\t\t\tid={p.id}\r\n\t\t\t\tauthor={p.author}\r\n\t\t\t\tpost_content={p.post_content}\r\n\t\t\t\tlikes_count={p.likes_count} \r\n\t\t\t/>)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/actionCreators';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconst stateCopy = {\r\n\t\t...state,\r\n\t\tprofile: {\r\n\t\t\tposts: [...state.profile.posts],\r\n\t\t}\r\n\t}\r\n\r\n\treturn ({\r\n\t\tposts: stateCopy.profile.posts,\r\n\t});\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn ({\r\n\t\taddPost: (new_post) => {\r\n\t\t\tconst action = addPostActionCreator(new_post);\r\n\t\t\t\tdispatch(action);\r\n\t\t}\r\n\t})\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Status = ({ statusText, ownProfile, updateStatus }) => {\r\n\tconst [status, setStatus] = useState(statusText)\r\n\tconst [editMode, setEditMode] = useState(statusText)\r\n\r\n\tif (status === '' && ownProfile) {\r\n\t\tsetStatus('Double-click here to add status');\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(statusText)\r\n\t}, [statusText]);\r\n\r\n\tconst toggleEditMode = () => {\r\n\t\tsetEditMode(!editMode);\r\n\t}\r\n\r\n\tconst handleStatusChange = (e) => {\r\n\t\tsetStatus(e.target.value)\r\n\t}\r\n\r\n\tconst updateUserStatus = () => {\r\n\t\ttoggleEditMode()\r\n\t\tupdateStatus(status);\r\n\t}\r\n\r\n\tlet userStatus;\r\n\r\n\tif (ownProfile) {\r\n\t\tuserStatus = !editMode\r\n\t\t\t? <span key=\"status\" data-testid='ownStatusText' onDoubleClick={toggleEditMode}>{statusText}</span> : <div><input data-testid='statusChangeInput' type=\"text\" autoFocus={true} onChange={handleStatusChange} value={status} /><button data-testid=\"saveStatusButton\" onClick={updateUserStatus}>Save Changes</button></div>\r\n\t}\r\n\telse {\r\n\t\tuserStatus = <span key=\"status\" data-testid='statusText'>{status}</span>;\r\n\t}\r\n\treturn userStatus;\r\n}\r\n\r\nexport default Status;","import React from 'react';\r\nimport Preloader from '../../common/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport avatarPlaceholder from '../../../assets/images/avatar.png';\r\nimport Status from './Status';\r\n\r\nconst ProfileInfo = ({ current_visited_user, isFetching, status, updateStatus, user_id }) => {\r\n\r\n\tif (isFetching) return <Preloader />\r\n\tif (!current_visited_user) return <Preloader />\r\n\tlet ownProfile = current_visited_user.userId === user_id;\r\n\r\n\tlet is_looking = current_visited_user.lookingForAJob\r\n\t\t? <span className={s.looking_for_job}>🤑</span>\r\n\t\t: <span className={s.looking_for_job}>🤠</span>;\r\n\r\n\tlet contacts = [];\r\n\tfor (let contact in current_visited_user.contacts) {\r\n\t\tif (current_visited_user.contacts[contact]) {\r\n\t\t\tcontacts.push(\r\n\t\t\t\t<div key={contact} className={s.contact}>{`${contact}: ${current_visited_user.contacts[contact]}`}</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse { contacts.push(<div key={contact} className={s.contact}>{`${contact}: --`}</div>) }\r\n\t}\r\n\r\n\tlet avatar = current_visited_user.photos.large\r\n\t\t? <img src={current_visited_user.photos.large} alt=\"avatar\" />\r\n\t\t: <img src={avatarPlaceholder} alt=\"avatar\" />\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.profileInfo_wrapper}>\r\n\t\t\t<div className={s.banner}>\r\n\t\t\t\t<img src=\"https://source.unsplash.com/1000x200/?city\" alt=\"newyear\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.person_info}>\r\n\t\t\t\t<div className={s.avatar_block}>\r\n\t\t\t\t\t<div className={s.user_name}>{current_visited_user.fullName} {is_looking}</div>\r\n\t\t\t\t\t{avatar}\r\n\t\t\t\t\t<button>Change Profile Photo</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.description_block}>\r\n\t\t\t\t\t<h3 className={s.description_header}>About me</h3>\r\n\t\t\t\t\t<div className={s.description_content}>\r\n\t\t\t\t\t\t<Status statusText={status} ownProfile={ownProfile} updateStatus={updateStatus} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3 className={s.description_header}>Contacts:</h3>\r\n\t\t\t\t\t{contacts}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './Posts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = ({current_visited_user,isFetching,status,updateStatus,setCurrentRoute,user_id}) => {\r\n\tsetCurrentRoute(\"/profile\");\r\n\treturn(\r\n\t\t<main className={s.profile_wrapper}>\r\n\t\t\t<ProfileInfo current_visited_user={current_visited_user} isFetching={isFetching} status={status} updateStatus={updateStatus} user_id={user_id} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport {getUserData,updateStatus} from '../../redux/thunkCreators';\r\nimport { setCurrentRoute } from '../../redux/actionCreators';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAuthRedirect from '../common/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getCurrentVisitedUserId, getIsFetchingProfileData,getCurrentVisitedUserstatus, getCurrentUserId } from '../../redux/selectors';\r\n\r\nclass ProfileContainer extends Component {\r\n\tcomponentDidMount() {\r\n\t\tlet {userId} = this.props.match.params;\r\n\t\tif(!userId) userId = this.props.user_id;\r\n\t\tthis.props.getUserData(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <Profile {...this.props} />\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn (\r\n\t\t{\r\n\t\t\tcurrent_visited_user: getCurrentVisitedUserId(state),\r\n\t\t\tis_fetching: getIsFetchingProfileData(state),\r\n\t\t\tstatus: getCurrentVisitedUserstatus(state),\r\n\t\t\tuser_id: getCurrentUserId(state),\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport default compose (\r\n\tconnect(mapStateToProps,{getUserData,updateStatus,setCurrentRoute}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}